<?php require 'includes/header.php'; ?>
<?php require 'includes/nav.php'; ?>

  <main>
   <section>
      <article>
        <h2>Одинарные кавычки</h2>

        <?php
echo 'это простая строка';
echo '<br>';

echo 'Также вы можете вставлять в строки
символ новой строки вот так,
это нормально';
echo '<br>';

// Выводит: Однажды Арнольд сказал: "I'll be back"
echo 'Однажды Арнольд сказал: "I\'ll be back"';
echo '<br>';

// Выводит: Вы удалили C:\*.*?
echo 'Вы удалили C:\\*.*?';
echo '<br>';

// Выводит: Вы удалили C:\*.*?
echo 'Вы удалили C:\*.*?';
echo '<br>';

// Выводит: Это не будет развернуто: \n новая строка
echo 'Это не будет развернуто: \n новая строка';
echo '<br>';

// Выводит: Переменные $expand также $either не разворачиваются
echo 'Переменные $expand также $either не разворачиваются';
echo '<br>';
        ?>

      </article>
      <article>
      <h2>Пример #1 Одинарные кавычки</h2>
      <pre>
        echo 'это простая строка';

        echo 'Также вы можете вставлять в строки
        символ новой строки вот так,
        это нормально';

        // Выводит: Однажды Арнольд сказал: "I'll be back"
        echo 'Однажды Арнольд сказал: "I\'ll be back"';

        // Выводит: Вы удалили C:\*.*?
        echo 'Вы удалили C:\\*.*?';

        // Выводит: Вы удалили C:\*.*?
        echo 'Вы удалили C:\*.*?';

        // Выводит: Это не будет развернуто: \n новая строка
        echo 'Это не будет развернуто: \n новая строка';

        // Выводит: Переменные $expand также $either не разворачиваются
        echo 'Переменные $expand также $either не разворачиваются';
      </pre>
      </article>
      <article>
     <h2>Одинарные кавычки</h2>
       <p>
       переменные и управляющие последовательности для специальных символов, заключенных в одинарные кавычки, не обрабатываются.
       </p>

     </article>

   </section>

   <section>
      <article>
        <h2>Двойные кавычки</h2>

        <?php
        echo "это простая строка";
        echo '<br>';

        echo "Также вы можете вставлять в строки
        символ новой строки вот так,
        это нормально";
        echo '<br>';

        // Выводит: Однажды Арнольд сказал: "I'll be back"
        echo "Однажды Арнольд сказал: \"I'll be back\"";
        echo '<br>';

        // Выводит: Вы удалили C:\*.*?
        echo "Вы удалили C:\\*.*?";
        echo '<br>';

        // Выводит: Вы удалили C:\*.*?
        echo "Вы удалили C:\*.*?";
        echo '<br>';

        // Выводит: Это не будет развернуто: \n новая строка
        echo "\r\n Это будет развернуто:"."\r\n"." новая строка в консоли ";
        echo '<br>';

        // Выводит: Переменные $expand также $either не разворачиваются
        $expand  =' I am $expand ';
        $either = ' I am $either';
        echo "Переменные $expand также $either разворачиваются";
        echo '<br>';        ?>

      </article>

    <article>
      <h2>Пример #2 Двойные кавычки</h2>
      <pre>
        echo "это простая строка";
        echo '<br>';

        echo "Также вы можете вставлять в строки
        символ новой строки вот так,
        это нормально";
        echo '<br>';

        // Выводит: Однажды Арнольд сказал: "I'll be back"
        echo "Однажды Арнольд сказал: \"I'll be back\"";
        echo '<br>';

        // Выводит: Вы удалили C:\*.*?
        echo "Вы удалили C:\\*.*?";
        echo '<br>';

        // Выводит: Вы удалили C:\*.*?
        echo "Вы удалили C:\*.*?";
        echo '<br>';

        // Выводит:
        // Это будет развернуто: \n новая строка  в консоли
        echo "\r\n Это будет развернуто:"."\r\n"." новая строка в консоли ";
        echo '<br>';

        // Выводит: Переменные $expand
        //  также $either разворачиваются
        $expand  =' I am $expand ';
        $either = ' I am $either';
        echo "Переменные $expand также $either разворачиваются";
        echo '<br>';        ?>

      </pre>
    </article>
         <article>
     <h2>Двойные кавычки</h2>
       <p>Если строка заключена в двойные кавычки ("), PHP распознает большее количество управляющих последовательностей для специальных символов
       </p>

     </article>


   </section>

   <section>
    <article>
        <h2>Простой синтаксис</h2>

        <?php

        $juice = "apple";

        echo "He drank some $juice juice.".PHP_EOL;
        // не работает, 's' - это верный символ для имени переменной,
        // но наша переменная имеет имя $juice.
        echo "He drank some juice made of $juices.";
        ?>

      </article>

    <article>
      <h2>Пример #3 Простой синтаксис </h2>
      <pre>

  $juice = "apple";

  echo "He drank some $juice juice.".PHP_EOL;

  // не работает,
  //  's' - это верный символ для имени переменной,
  // но наша переменная имеет имя $juice.
  echo "He drank some juice made of $juices.";

  езультат выполнения данного примера:

  He drank some apple juice.
  He drank some juice made of .

      </pre>
    </article>
         <article>
     <h2>Простой синтаксис</h2>
       <p>Если интерпретатор встречает знак доллара ($), он захватывает так много символов, сколько возможно, чтобы сформировать правильное имя переменной. Если вы хотите точно определить конец имени, заключайте имя переменной в фигурные скобки. </p>


       </p>

     </article>
   </section>
  <section>
    <article>
        <h2>элемент массива (array)</h2>

        <?php
        $juices = array("apple", "orange", "koolaid1" => "purple");

        echo "He drank some $juices[0] juice.".PHP_EOL;
        echo "He drank some $juices[1] juice.".PHP_EOL;
        echo "He drank some $juices[koolaid1] juice.".PHP_EOL;

        ?>

      </article>

    <article>
      <h2>Пример #4 элемент массива (array)</h2>
      <pre>
        $juices = array("apple", "orange", "koolaid1" => "purple");

        echo "He drank some $juices[0] juice.".PHP_EOL;
        echo "He drank some $juices[1] juice.".PHP_EOL;
        echo "He drank some $juices[koolaid1] juice.".PHP_EOL;

      </pre>
    </article>
         <article>
     <h2>элемент массива (array)</h2>
       <p> В индексах массива закрывающая квадратная скобка (]) обозначает конец определения индекса. Для свойств объекта применяются те же правила, что и для простых переменных. </p>


     </article>
   </section>

  <section>
    <article>
        <h2>Сложный (фигурный) синтаксис </h2>

        <?php
        // Показываем все ошибки
        error_reporting(E_ALL);

        $great = 'здорово';

        // Не работает, выводит: Это { здорово}
        echo "Это { $great}<br>";

        // Работает, выводит: Это здорово
        echo "Это {$great}<br>";
        echo "Это ${great}<br>";

        $arr = ['key'=>'ключи, заключенные в кавычки, работают только с синтаксисом фигурных скобок'];


        // Работает, ключи, заключенные в кавычки, работают только с синтаксисом фигурных скобок
        echo "Это работает: {$arr['key']}<br>";

        // Работает
        echo "Это работает: {$arr[4][3]}<br>";

        // Работает. При использовании многомерных массивов внутри
        // строк всегда используйте фигурные скобки
        echo "Это работает: {$arr['foo'][3]}<br>";

        // Работает.
        echo "Это работает: " . $arr['foo'][3];
        $name = 'Это значение переменной по имени';
        echo "Это значение переменной по имени $name: {${$name}}<br>";

        ?>

      </article>

    <article>
      <h2>Пример #5 Сложный (фигурный) синтаксис </h2>
      <pre>

  // Показываем все ошибки
  error_reporting(E_ALL);

  $great = 'здорово';

  // Не работает, выводит: Это { здорово}
  echo "Это { $great}";

  // Работает, выводит: Это здорово
  echo "Это {$great}";
  echo "Это ${great}";

  // Работает
  echo "Этот квадрат шириной
          {$square->width}00 сантиметров.";

  // Работает,
  // ключи, заключенные в кавычки,
  // работают только с синтаксисом фигурных скобок
  echo "Это работает: {$arr['key']}";

  // Работает
  echo "Это работает: {$arr[4][3]}";

  // Это неверно по той же причине, что и $foo[bar] вне
  // строки. Другими словами, это по-прежнему будет работать,
  // но поскольку PHP сначала ищет константу foo, это вызовет
  // ошибку уровня E_NOTICE (неопределенная константа).

  echo "Это неправильно: {$arr[foo][3]}";

  // Работает.
  // При использовании многомерных массивов внутри
  // строк всегда используйте фигурные скобки

  echo "Это работает: {$arr['foo'][3]}";

  // Работает.
  echo "Это работает: " . $arr['foo'][3];


  echo "Это значение переменной по имени $name: {${$name}}";

      </pre>
    </article>
         <article>
     <h2>Сложный (фигурный) синтаксис </h2>
       <p>Любая скалярная переменная, элемент массива или свойство объекта, отображаемое в строку, может быть представлена в строке этим синтаксисом. Просто запишите выражение так же, как и вне строки, а затем заключите его в { и }. Поскольку { не может быть экранирован, этот синтаксис будет распознаваться только когда $ следует непосредственно за {. Используйте {\$, чтобы напечатать {$.</p>


     </article>
   </section>


  </main>

<?php require 'includes/footer.php'; ?>
